{"version":3,"sources":["data.js","App.js","serviceWorker.js","index.js","hand.svg"],"names":["symptomStore","a2 pulley","blurb","text","source","symptoms","anecdotes","flexor tendon","text:","lumbrical tear","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setLocation","locationSpecific","locationGeneral","setState","state","diagnosis","_this$state","react_default","a","createElement","className","App_HandLocator","App_LocationInfo","Component","HandLocator","lookupLocation","x","y","getSelectedRect","activeRects","document","getElementsByClassName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","setAttribute","err","return","svg","querySelector","rootRect","getBoundingClientRect","redArrowPoint","getElementById","svgRect","createSVGRect","height","width","nodeList","getIntersectionList","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","node","getAttribute","onDrag","selectedRect","_this2","_selectedRect$getAttr","split","_selectedRect$getAttr2","slicedToArray","viewBox","version","xmlns","xmlnsXlink","id","stroke","fill","draggable","xlinkHref","hand","alt","rx","d","react_draggable_default","defaultPosition","fillRule","transform","strokeLinecap","strokeWidth","fontFamily","fontSize","fontWeight","capitalize","string","toUpperCase","slice","LocationInfo","_this3","_this$state2","locationInfo","white_space_default","size","wing_blank_default","card_default","Header","title","extra","Body","Footer","href","button_default","type","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.b82b1be3.chunk.js","sourcesContent":["export const symptomStore = {\n  'a2 pulley': {\n    'blurb': {\n      'text': 'The most common pulley injury. Typically caused by the closed hand crimp position in which the flexor tendons apply up to 3â€“4 times the fingertip load on the pulley. The ring finger is most susceptible to this injury because the pinky provides little support.',\n      'source': 'https://medium.com/@jamesleedpt/a2-pulley-injuries-in-rock-climbing-9cb00fa6f3bf'\n    },\n    'symptoms': [{\n        'text': 'A pop is heard or felt, often while crimping',\n        'anecdotes': [\n        ]\n      },\n      {\n        'text': 'Pain when pressing the base of the finger',\n        'anecdotes': [\n        ]\n      },\n      {\n        'text': '',\n        'anecdotes': [\n        ]\n      },\n    ]\n  },\n\n  'flexor tendon': {\n    'blurb': {\n      'text:': '',\n      'source': ''\n    },\n    'symptoms': [{\n        'text': 'Pain radiating from the forearm',\n        'anecdotes': [{\n          'source': 'https://www.reddit.com/r/climbharder/comments/3fb4nu/how_does_a_torn_pulley_feel'\n        }]\n      },\n      {\n        'text': 'Injured on a pocket',\n        'anecdotes': [{\n          'source': 'https://www.reddit.com/r/climbharder/comments/3fb4nu/how_does_a_torn_pulley_feel'\n        }]\n      },\n      {\n        'text': '',\n        'anecdotes': [\n        ]\n      },\n    ]\n  },\n\n\n  'lumbrical tear': {\n    'blurb': {\n      'text:': '',\n      'source': ''\n    },\n    'symptoms': [{\n        'text': 'Pain felt in multiple fingers',\n        'anecdotes': [{\n          'source': 'https://www.reddit.com/r/climbharder/comments/57bwc9/finger_injury_mystery/'\n        }]\n      },\n      {\n        'text': 'Injured on a pocket',\n        'anecdotes': [{\n          'source': 'https://www.reddit.com/r/climbharder/comments/3fb4nu/how_does_a_torn_pulley_feel'\n        }]\n      },\n      {\n        'text': '',\n        'anecdotes': [\n        ]\n      },\n    ]\n  }\n};\n","import React, { Component } from 'react';\nimport Draggable from 'react-draggable';\nimport { Button, Card, WhiteSpace, WingBlank } from 'antd-mobile';\n\nimport './App.css';\nimport { symptomStore } from './data.js';\nimport hand from './hand.svg';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      diagnosis: null,\n      locationSpecific: null,\n      locationGeneral: null,\n    };\n  }\n\n  setLocation = (locationSpecific, locationGeneral) => {\n      this.setState({ locationSpecific, locationGeneral })\n  };\n\n  render() {\n    const { locationSpecific, locationGeneral } = this.state;\n    return (\n      <div className=\"App\">\n        <h2>Climber, climber, where does it hurt?</h2>\n        <HandLocator\n          setLocation={ this.setLocation }\n        />\n        <LocationInfo\n          locationSpecific={ locationSpecific }\n          locationGeneral={ locationGeneral }\n        />\n      </div>\n    );\n  }\n}\n\nclass HandLocator extends Component {\n  lookupLocation = (x, y) => {\n    return {locationSpecific: 'a2 pulley', locationGeneral: 'ring finger'}\n  };\n\n  getSelectedRect = () => {\n    const activeRects = document.getElementsByClassName(\"RectangleActive\")\n    for (const rect of activeRects) {\n      rect.setAttribute(\"class\", \"Rectangle\");\n    }\n    const svg = document.querySelector('svg');\n    const rootRect = svg.getBoundingClientRect();\n    const redArrowPoint = document.getElementById('redarrowpoint').getBoundingClientRect();\n    const svgRect = svg.createSVGRect();\n    svgRect.x = redArrowPoint.x - rootRect.x;\n    svgRect.y = redArrowPoint.y - rootRect.y;\n    svgRect.height = redArrowPoint.height;\n    svgRect.width = redArrowPoint.width;\n    const nodeList = svg.getIntersectionList(svgRect, null);\n    for (const node of nodeList) {\n      if (node.getAttribute(\"class\") === \"Rectangle\") {\n        return node;\n      }\n    }\n  }\n\n  onDrag = () => {\n    const selectedRect = this.getSelectedRect();\n    if (selectedRect) {\n      selectedRect.setAttribute(\"class\", \"RectangleActive\");\n      const [locationSpecific, locationGeneral] = selectedRect.getAttribute(\"id\").split(\":\", 2);\n      this.props.setLocation(locationSpecific, locationGeneral);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"HandLocator\">\n      <svg width=\"500px\" height=\"500px\" viewBox=\"0 0 500 500\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n        <g id=\"handrectgroup\" stroke=\"none\" fill=\"none\">\n            <image id=\"hand\" height=\"500\" width=\"500\" draggable=\"false\" xlinkHref={ hand } alt=\"hand\"/>\n            <rect className=\"Rectangle\" id=\"a2 pulley:middle finger\" x=\"200\" y=\"181\" width=\"32\" height=\"51\" rx=\"8\"></rect>\n            <path d=\"M202.840345,103.745797 L222.49563,103.004061 C225.835727,102.878015 228.637965,105.701902 228.754603,109.311391 L229.995363,147.707785 C230.112002,151.317273 227.498873,154.345522 224.158776,154.471568 L204.503491,155.213305 C201.163394,155.339351 198.361156,152.515463 198.244517,148.905975 L197.003758,110.509581 C196.887119,106.900092 199.500248,103.871843 202.840345,103.745797 Z\" className=\"Rectangle\" id=\"a4 pulley:middle finger\"></path>\n            <path d=\"M120.183094,133.889528 L138.887776,127.321834 C142.066333,126.20576 145.480293,128.085557 146.513069,131.520477 L157.499354,168.059877 C158.53213,171.494797 156.79263,175.184105 153.614073,176.300178 L134.909392,182.867873 C131.730835,183.983946 128.316875,182.104149 127.284099,178.66923 L116.297814,142.129829 C115.265038,138.69491 117.004537,135.005601 120.183094,133.889528 Z\" className=\"Rectangle\" id=\"a4 pulley:ring finger\"></path>\n            <path d=\"M140.385017,200.113278 L159.290407,194.255017 C162.503071,193.259501 165.854243,195.266908 166.77546,198.738685 L176.57502,235.670167 C177.496237,239.141944 175.638652,242.763401 172.425987,243.758918 L153.520598,249.617178 C150.307934,250.612694 146.956761,248.605288 146.035545,245.13351 L136.235984,208.202029 C135.314768,204.730251 137.172353,201.108794 140.385017,200.113278 Z\" className=\"Rectangle\" id=\"a2 pulley:ring finger\"></path>\n        </g>\n        <Draggable onDrag={ this.onDrag } defaultPosition={{x: 360, y: 80}}>\n        <g id=\"arrowgroup\" fill=\"none\">\n          <rect id=\"redarrowpoint\" x=\"-7\" y=\"78\" height=\"15\" width=\"15\" />\n          <g id=\"Group-3\">\n              <rect id=\"Rectangle\" stroke=\"#525252\" fill=\"#FF6B6B\" x=\"19.5\" y=\"0.5\" width=\"108\" height=\"58\" rx=\"8\"></rect>\n              <path id=\"Line\" d=\"M6.0735912,76.8050885 L24.9393398,57.9393398 C25.5251263,57.3535534 26.4748737,57.3535534 27.0606602,57.9393398 C27.6464466,58.5251263 27.6464466,59.4748737 27.0606602,60.0606602 L8.19491154,78.9264088 C10.8923859,82.6409483 10.5665869,87.868442 7.21751442,91.2175144 C3.50753365,94.9274952 -2.50753365,94.9274952 -6.21751442,91.2175144 C-9.92749519,87.5075336 -9.92749519,81.4924664 -6.21751442,77.7824856 C-2.86844199,74.4334131 2.3590517,74.1076141 6.0735912,76.8050885 Z\" fill=\"#525252\" fillRule=\"nonzero\"></path>\n          </g>\n          <g id=\"Group-2\" transform=\"translate(96.000000, 13.000000)\" stroke=\"#525252\" strokeLinecap=\"round\" strokeWidth=\"2\">\n              <path d=\"M0,0.5 L18,0.5\" id=\"Line-2\"></path>\n              <path d=\"M0,6.5 L18,6.5\" id=\"Line-2\"></path>\n              <path d=\"M0,13 L18,13\" id=\"Line-2\"></path>\n              <path d=\"M0,19.5 L18,19.5\" id=\"Line-2\"></path>\n              <path d=\"M0,26 L18,26\" id=\"Line-2\"></path>\n              <path d=\"M0,32.5 L18,32.5\" id=\"Line-2\"></path>\n          </g>\n          <text id=\"Hurts-Here\" fill=\"#282828\" fontFamily=\"Helvetica-Bold, Helvetica\" fontSize=\"21\" fontWeight=\"bold\">\n              <tspan x=\"30\" y=\"25\">Hurts </tspan>\n              <tspan x=\"30\" y=\"50\">Here</tspan>\n          </text>\n        </g>\n        </Draggable>\n      </svg>\n      </div>\n    );\n  }\n}\n\n\nfunction capitalize(string) {\n  if (string) return string[0].toUpperCase() + string.slice(1);\n}\n\nclass LocationInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locationSpecific: props.locationSpecific,\n      locationGeneral: props.locationGeneral,\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    this.setState({\n      locationSpecific: props.locationSpecific,\n      locationGeneral: props.locationGeneral,\n    });\n  }\n\n  render() {\n    const { locationSpecific, locationGeneral } = this.state;\n    const locationInfo = ((symptomStore[locationSpecific] || {}).blurb || {}).text;\n    return (\n      <div>\n      <WhiteSpace size=\"lg\" />\n      <WingBlank>\n      <Card>\n        <Card.Header\n          title={ capitalize(locationSpecific) }\n          extra={ capitalize(locationGeneral) }\n        />\n        <Card.Body>\n          <div>{ locationInfo }</div>\n        </Card.Body>\n        <Card.Footer\n          extra={ locationSpecific ? (<p>Source: <a href=\"https://medium.com/@jamesleedpt/a2-pulley-injuries-in-rock-climbing-9cb00fa6f3bf\">Dr. James Lee</a></p>) : undefined }\n          />\n      </Card>\n      <WhiteSpace size=\"sm\" />\n      <Button type=\"ghost\">View Common Injuries</Button>\n      </WingBlank>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/hand.0a36230f.svg\";"],"sourceRoot":""}